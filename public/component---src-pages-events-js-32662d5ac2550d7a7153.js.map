{"version":3,"file":"component---src-pages-events-js-32662d5ac2550d7a7153.js","mappings":"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","sources":["webpack://i-ups/./src/utils/events.js","webpack://i-ups/./src/components/event.module.scss","webpack://i-ups/./src/components/event.js","webpack://i-ups/./src/styles/events.module.scss","webpack://i-ups/./src/pages/events.js"],"sourcesContent":["import { supabase, storageClient } from '../utils/supabase'\n\nconst noEventsError = new Error(\"no events were found\")\n\nasync function getAllEvents() {\n  const { data: events, error: error } = await supabase\n    .from('events')\n    .select('*')\n    .eq('display', true)\n    .order('start_date', { ascending: true })\n\n  if (events == null || events.length < 1) {\n    throw noEventsError\n  }\n\n  return events\n}\n\nasync function getRecurringEvents() {\n    const { data: events, error: error } = await supabase\n      .from('events')\n      .select('*')\n      .eq('recurring', true)\n      .eq('display', true)\n      .order('name', { ascending: true })\n  \n    if (events == null || events.length < 1) {\n      throw noEventsError\n    }\n  \n    return events\n}\n\nexport { getAllEvents, getRecurringEvents };","// extracted by mini-css-extract-plugin\nexport var eventContainer = \"event-module--event-container--0k9xV\";\nexport var eventContainerBackground = \"event-module--event-container-background--aa9h-\";\nexport var eventImage = \"event-module--event-image--d8IKF\";\nexport var eventTitle = \"event-module--event-title--LFS2A\";","import React from 'react';\nimport * as styles from './event.module.scss';\n\nfunction Event(props) {\n\n    const event = props.event\n\n    if (event == null) { return }\n\n    return (\n        <div className={ [styles.eventContainer, (event.image == null ? styles.eventContainerBackground : '')].join(' ') }>\n            { event.image != null &&\n                <img className={ [styles.eventImage].join(' ') } src={ `/images/${event.image}` }/>\n            }\n            { event.image == null &&\n                <h2 className={ [styles.eventTitle].join(' ') }>{event.name ?? \"\"}</h2> \n            }\n        </div>\n    )\n}\n\nexport default Event;","// extracted by mini-css-extract-plugin\nexport var closeButton = \"events-module--close-button--Fr98P\";\nexport var closeButtonWrapper = \"events-module--close-button-wrapper--OZnzC\";\nexport var eventInfoSection = \"events-module--event-info-section--IqxAS\";\nexport var eventTitle = \"events-module--event-title--T8pSr\";\nexport var eventsContainer = \"events-module--events-container--zaEIp\";\nexport var eventsContainerSubtitle = \"events-module--events-container-subtitle--P2hCy\";\nexport var eventsSection = \"events-module--events-section--cFvWa\";\nexport var hidden = \"events-module--hidden--uughy\";\nexport var info = \"events-module--info--IrOGM\";\nexport var infoParagraph = \"events-module--info-paragraph--QqymZ\";\nexport var mainPage = \"events-module--main-page--93+VL\";\nexport var mainTitle = \"events-module--main-title--ZBOxO\";\nexport var selectedEvent = \"events-module--selected-event--7VVzG\";\nexport var subtitle = \"events-module--subtitle--8DG7W\";","import React, { useState, useEffect } from 'react'\nimport {Link} from 'gatsby';\nimport {Helmet} from \"react-helmet\";\n\nimport { getAllEvents, getRecurringEvents } from \"../utils/events\"\n\nimport Layout from '../components/layout';\nimport Event from '../components/event';\nimport Loader from '../components/loader'\n\nimport '../styles/general.scss';\nimport * as styles from '../styles/events.module.scss'\n\nimport CloseIcon from '../images/icons/times-solid.svg'\n\n\nfunction EventsPage() {\n\n  const [events, setEvents] = useState([])\n\n  const [selectedRecurringEvent, setSelectedRecurringEvent] = useState(null)\n  const [selectedEvent, setSelectedEvent] = useState(null)\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  /*\n    On page load make an API call to Supabase to get the list of societies\n  */\n  useEffect(() => {\n    setIsLoading(true)\n\n    var tempEventsList = []\n\n    getAllEvents().then((dbList) => {\n      Object.values(dbList).map((event) => {\n        tempEventsList.push(event);\n      });\n\n      setEvents(tempEventsList)\n\n    }).catch((e) => {\n      setErrorMessage(\"An error occurred while fetching the events data. Please try again later.\")\n    }).finally(() => {\n      setIsLoading(false)\n    })\n  }, [])\n\n  return (\n    <>\n    <Helmet>\n      <title>Inter-Uni Pok√©Soc - Events</title>\n    </Helmet>\n\n    <Layout>\n\n      { isLoading &&\n        <Loader center={ true } />\n      }\n\n      { !isLoading && errorMessage == null &&\n        <main className={ [styles.mainPage, \"page-content\"].join(' ') }>\n          <section className={ styles.eventsSection }>\n            <h1 className={ [styles.mainTitle, 'huge-title', 'shiny-title'].join(' ') }>Events</h1>\n\n\n            {/* Recurring Events Section */}\n            <h2 className={ [styles.eventsContainerSubtitle, 'shiny-title'].join(' ') }>Recurring</h2>\n            <section className={ [styles.eventsContainer, styles.recurringEventsContainer].join(' ') }>\n\n              { events.map((event, index) => {\n                { return event.recurring &&\n                  <a className={ selectedRecurringEvent == event ? styles.selectedEvent : '' }\n                  onClick={ () => { setSelectedRecurringEvent(selectedRecurringEvent != event ? event : null) } }>\n                    <Event event={ event } />\n                  </a>\n                }\n              })}\n            </section>\n\n            <section className={ selectedRecurringEvent == null ? styles.hidden : styles.eventInfoSection }>\n              { selectedRecurringEvent != null &&\n                <a className={ styles.closeButtonWrapper } onClick={ () => { setSelectedRecurringEvent(null) } }>\n                  <img className={ styles.closeButton } src={ CloseIcon } alt=\"Close button for selected event.\" />\n                </a>\n              }\n\n              <h2 className={ styles.eventTitle }>{ selectedRecurringEvent != null ? selectedRecurringEvent.name : \"\" }</h2>\n              \n              { selectedRecurringEvent != null && selectedRecurringEvent.description != null &&\n                selectedRecurringEvent.description.map((paragraph, index) => {\n                  return <p className={ styles.eventDescription }>{ paragraph }</p>\n                })\n              }\n\n              { selectedRecurringEvent != null && selectedRecurringEvent.how_to_join != null &&\n                <h3 className={ styles.eventSubtitle }>How to Join</h3>\n              }\n\n              { selectedRecurringEvent != null && selectedRecurringEvent.how_to_join != null &&\n                selectedRecurringEvent.how_to_join.map((howToJoinParagraph, index) => {\n                return <p className={ styles.eventDescription }>{ howToJoinParagraph }</p>\n              })}\n            </section>\n\n\n            {/* Upcoming Events Section */}\n            <h2 className={ [styles.eventsContainerSubtitle, 'shiny-title'].join(' ') }>Upcoming</h2>\n            <section className={ [styles.eventsContainer, styles.generalEventsContainer].join(' ') }>\n              { events.map((event, index) => {\n                { return !event.recurring &&\n                  <a className={ selectedEvent == event ? styles.selectedEvent : '' }\n                  onClick={ () => { setSelectedEvent(selectedEvent != event ? event : null) } }>\n                    <Event event={ event } />\n                  </a>\n                }\n              })}\n            </section>\n\n            <section className={ selectedEvent == null ? styles.hidden : styles.eventInfoSection }>\n              { selectedEvent != null &&\n                <a className={ styles.closeButtonWrapper } onClick={ () => { setSelectedEvent(null) } }>\n                  <img className={ styles.closeButton } src={ CloseIcon } alt=\"Close button for selected event.\" />\n                </a>\n              }\n\n              <h2 className={ styles.eventTitle }>{ selectedEvent != null ? selectedEvent.name : \"\" }</h2>\n\n              { selectedEvent != null && selectedEvent.description != null &&\n                selectedEvent.description.map((paragraph, index) => {\n                  return <p className={ styles.eventDescription }>{ paragraph }</p>\n                })\n              }\n\n              { selectedEvent != null && selectedEvent.how_to_join != null &&\n                <h3 className={ styles.eventSubtitle }>How to Join</h3>\n              }\n\n              { selectedEvent != null && selectedEvent.how_to_join != null &&\n                selectedEvent.how_to_join.map((howToJoinParagraph, index) => {\n                return <p className={ styles.eventDescription }>{ howToJoinParagraph }</p>\n              })}\n            </section>\n          </section>\n\n\n          {/* Info Section */}\n          <section className={ styles.info }>\n            <h2 className={ [styles.subtitle, 'shiny-title'].join(' ') }>How to Get Involved</h2>\n            <p className={ styles.infoParagraph }>You can find how to join specific events by clicking/tapping\n            on the events listed above, there also may be further information in the Discord server.\n            </p>\n            <p className={ styles.infoParagraph }>Individual society events listed here are available for \n            I-UPS members to attend, you may need to let the particular society know that you are attending.\n            </p>\n            <p className={ styles.infoParagraph }>You will usually need to be a member of the I-UPS in order\n            to attend any events, on the rare occasion that events are open to the public this will be explicitly \n            stated.\n            </p>\n          </section>\n\n        </main>\n      }\n\n    </Layout>\n    </>\n  );\n}\n\nexport default EventsPage;\n"],"names":["noEventsError","Error","eventContainer","eventImage","eventTitle","props","event","className","styles","image","join","src","name","closeButton","closeButtonWrapper","eventInfoSection","eventsContainer","eventsContainerSubtitle","eventsSection","info","infoParagraph","mainPage","mainTitle","subtitle","events","setEvents","useState","selectedRecurringEvent","setSelectedRecurringEvent","selectedEvent","setSelectedEvent","isLoading","setIsLoading","errorMessage","setErrorMessage","useEffect","tempEventsList","async","data","error","supabase","select","eq","order","ascending","length","getAllEvents","then","dbList","Object","values","map","push","catch","e","finally","Helmet","center","index","recurring","onClick","CloseIcon","alt","description","paragraph","how_to_join","howToJoinParagraph"],"sourceRoot":""}